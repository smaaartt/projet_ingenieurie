name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job pour la vérification de style et tests
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout du code
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Installer Python et dépendances
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt

      # 3. Formatage du code avec black
      - name: Format code with black
        run: black . --line-length 79

      # 4. Linting avec flake8 (ignorer les erreurs mais les afficher)
      - name: Run flake8 linting
        run: flake8 . --exit-zero

      # 5. Exécution des tests unitaires avec pytest
      - name: Run tests with pytest
        run: pytest

  # Job pour la construction et le push Docker (optionnel)
  docker_build_and_push:
    runs-on: ubuntu-latest
    needs: lint_and_test
    steps:
      # 1. Checkout du code
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Construction de l'image Docker
      - name: Build Docker image
        run: docker build -t my-image-name .

      # 4. Connexion à Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Push de l'image sur Docker Hub
      - name: Push Docker image
        run: docker push my-image-name
